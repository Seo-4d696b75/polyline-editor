[{"C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\reportWebVitals.ts":"1","C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\script\\Dispatcher.ts":"2","C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\index.tsx":"3","C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\script\\DataStore.ts":"4","C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\script\\Actions.ts":"5","C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\components\\Dialog.tsx":"6","C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\script\\color.ts":"7","C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\script\\utils.ts":"8","C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\components\\Map.tsx":"9","C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\components\\Editor.tsx":"10","C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\components\\PolylineExtension.ts":"11","C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\components\\PolylineEdit.ts":"12","C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\diagram\\Edge.ts":"13","C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\diagram\\Point.ts":"14","C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\diagram\\Line.ts":"15"},{"size":425,"mtime":1609596005201,"results":"16","hashOfConfig":"17"},{"size":156,"mtime":1609940062731,"results":"18","hashOfConfig":"17"},{"size":491,"mtime":1612596478078,"results":"19","hashOfConfig":"17"},{"size":768,"mtime":1609939949712,"results":"20","hashOfConfig":"17"},{"size":528,"mtime":1609940337821,"results":"21","hashOfConfig":"17"},{"size":10171,"mtime":1614478609602,"results":"22","hashOfConfig":"17"},{"size":894,"mtime":1609940945646,"results":"23","hashOfConfig":"17"},{"size":2719,"mtime":1612598892633,"results":"24","hashOfConfig":"17"},{"size":11867,"mtime":1612625287293,"results":"25","hashOfConfig":"17"},{"size":8850,"mtime":1612625265366,"results":"26","hashOfConfig":"17"},{"size":4306,"mtime":1612670323936,"results":"27","hashOfConfig":"17"},{"size":6109,"mtime":1612670400860,"results":"28","hashOfConfig":"17"},{"size":2987,"mtime":1609668523965,"results":"29","hashOfConfig":"17"},{"size":1684,"mtime":1609693589923,"results":"30","hashOfConfig":"17"},{"size":3913,"mtime":1609668530369,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"141b9ne",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\reportWebVitals.ts",[],"C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\script\\Dispatcher.ts",[],["67","68"],"C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\index.tsx",[],"C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\script\\DataStore.ts",[],"C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\script\\Actions.ts",[],["69","70"],"C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\components\\Dialog.tsx",["71"],"C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\script\\color.ts",[],"C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\script\\utils.ts",[],"C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\components\\Map.tsx",[],"C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\components\\Editor.tsx",[],["72","73"],"C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\components\\PolylineExtension.ts",[],"C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\components\\PolylineEdit.ts",[],"C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\diagram\\Edge.ts",["74"],"import * as line from \"./Line\";\nimport * as point from \"./Point\";\nimport {Point, Line, Edge, DiagramError} from \"./types\"\n\nexport function toString(e: Edge) {\n\treturn `{${point.toString(e.a)}-${point.toString(e.b)}}`\n}\n\nexport function isEdge(p: any): p is Edge {\n\treturn p !== null &&\n\t\ttypeof p === \"object\" &&\n\t\tpoint.isPoint(p.a) &&\n\t\tpoint.isPoint(p.b)\n\n}\n\nclass EdgeError extends DiagramError {\n\tconstructor(mes: string) {\n\t\tsuper(mes)\n\t}\n}\n\nclass EdgeInitError extends DiagramError {\n\tconstructor(p: Point) {\n\t\tsuper(`point duplicated: ${point.toString(p)}`)\n\t}\n}\n\nexport function init(a: Point, b: Point): Edge {\n\tif (a.x < b.x) {\n\t\treturn { a: a, b: b };\n\t} else if (a.x > b.x) {\n\t\treturn { a: b, b: a };\n\t} else {\n\t\tif (a.y < b.y) {\n\t\t\treturn { a: a, b: b };\n\t\t} else if (a.y > b.y) {\n\t\t\treturn { a: b, b: a };\n\t\t} else {\n\t\t\tthrow new EdgeInitError(a)\n\t\t}\n\t}\n}\n\nexport function toLine(edge: Edge): Line {\n\treturn line.init(edge.a, edge.b);\n}\n\nexport function equals(self: Edge, other: Edge): boolean {\n\treturn point.equals(self.a, other.a) && point.equals(self.b, other.b);\n}\n\nexport function hashCode(edge: Edge): number {\n\tvar hash = 17;\n\thash = 31 * hash + point.hashCode(edge.a);\n\thash = 31 * hash + point.hashCode(edge.b);\n\treturn hash & hash;\n}\n\nexport function getMiddlepoint(edge: Edge): Point {\n\treturn {\n\t\tx: (edge.a.x + edge.b.x) / 2,\n\t\ty: (edge.a.y + edge.b.y) / 2,\n\t};\n}\n\nexport function onEdge(p1: Edge | Point, p2: Point, p3?: Point): boolean {\n\tif (isEdge(p1)) {\n\t\tp3 = p2\n\t\tvar edge = p1\n\t\tp1 = edge.a\n\t\tp2 = edge.b\n\t}\n\tif (p3) {\n\t\tvar start: Point = p1\n\t\tvar end: Point = p2\n\t\tvar p: Point = p3\n\t\tif ((start.x - p.x) * (end.x - p.x) + (start.y - p.y) * (end.y - p.y) <= 0) {\n\t\t\treturn line.onLine(start, end, p);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\tthrow new EdgeError(\"invalid arguments\")\n}\n\nexport function getDivision(edge: Edge, index: number): Point {\n\treturn point.getDivision(edge.a, edge.b, index);\n}\n\n/**\n * 交点を取得する\n * @param {edge} edge \n * @param {edge/line} other \n * @return null if no such point\n */\nexport function getIntersection(edge: Edge, other: Edge | Line): Point | null {\n\tif (line.isLine(other)) {\n\t\tvar p = line.getIntersection(toLine(edge), other);\n\t\tif (p) {\n\t\t\tvar v = (edge.a.x - p.x) * (edge.b.x - p.x) + (edge.a.y - p.y) * (edge.b.y - p.y);\n\t\t\treturn v <= 0 ? p : null;\n\t\t}\n\t\treturn null\n\t} else {\n\t\tp = getIntersection(edge, toLine(other));\n\t\tif (p) {\n\t\t\tv = (other.a.x - p.x) * (other.b.x - p.x) + (other.a.y - p.y) * (other.b.y - p.y);\n\t\t\tif (v <= 0) return p;\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport function getDistance(edge: Edge, p: Point): number {\n\tvar v1 = (p.x - edge.a.x) * (edge.b.x - edge.a.x) + (p.y - edge.a.y) * (edge.b.y - edge.a.y);\n\tvar v2 = (p.x - edge.b.x) * (edge.a.x - edge.b.x) + (p.y - edge.b.y) * (edge.a.y - edge.b.y);\n\tif (v1 > 0 && v2 > 0) {\n\t\treturn line.getDistance(toLine(edge), p);\n\t} else if (v1 <= 0) {\n\t\treturn point.measure(edge.a, p);\n\t} else {\n\t\treturn point.measure(edge.b, p);\n\t}\n}",["75","76"],"C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\diagram\\Point.ts",[],"C:\\Users\\skaor\\Documents\\ekimemo\\ts-test\\src\\diagram\\Line.ts",["77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"80","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"78","replacedBy":"88"},{"ruleId":"80","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":18,"column":2,"nodeType":"92","messageId":"93","endLine":20,"endColumn":3},{"ruleId":"78","replacedBy":"94"},{"ruleId":"80","replacedBy":"95"},{"ruleId":"90","severity":1,"message":"91","line":6,"column":2,"nodeType":"92","messageId":"93","endLine":8,"endColumn":3},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],["96"],["97"],"@typescript-eslint/no-unused-vars","'FormEvent' is defined but never used.","Identifier","unusedVar",["96"],["97"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["96"],["97"],"no-global-assign","no-unsafe-negation"]